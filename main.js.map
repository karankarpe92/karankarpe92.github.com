{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCZA,knBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEf;AAAA;AAAA;IAAA;QAME,UAAK,GAAG,aAAa,CAAC;IACxB,CAAC;IAAD,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAD;AAAA;AAAA;IAAA;IAMwB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCCzB,yIAAkB,KAChB;;;;;wBAA6D;MAA7B;;wBAA4B;MAA5D,i0BAA6D,IAC3D,4HAAU,KACR,0HAAQ,iGAAoB,MAC5B,gJACG,wFACD,6LACG,wFAAW,MAIlB,gJAAwB,KACtB,0IAAkB,KAChB,qJAA8B,KAC5B,sJAA+B,KAC7B,0HAAO,yGAA4B,MACnC;;;;;;;;;;;;85CAIE,IAGN,uJAA+B,KAC7B,wJAAgC,KAC9B,0HAAO,0FAAa,MACpB,kJAA0B,KACxB;;;;;;61CAIC,IACC,gzBAAoC,iFAAK,MACzC,gyBAAwB,oFAAQ,MAO1C,sKAAyC,qFAAQ,mDAvC/C,mBAAyB,cAA/B,YAA6D,EAAvD,SAAyB,GAgBnB,2BAA0B,EAD5B,aAIE,EAHA,UAA0B,GAWxB,4BAA2B,EAD7B,aAIC,EAHC,UAA2B,GAIV,yBAAkB,EAAnC,aAAoC,EAAnB,sCAAkB,EAAnC,aAAoC,EAAnB,UAAkB,GAC3B,sBAAe,EAAvB,aAAwB,EAAhB,mCAAe,EAAvB,aAAwB,EAAhB,UAAe,2BAhCrC,8sBAA6D,GAenD,guBAIE,GAOA,ouBAIC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/Cf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEa;AACP;AAExD;IAsBE,4BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAhBlC,gBAAW,GAKf;YACF,SAAS,EAAE,CAAC;YACZ,SAAS,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC;YACX,MAAM,EAAE,CAAC;SACV,CAAC;QACF,gBAAW,GAAG,IAAI,wDAAS,CAAC;YAC1B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC/B,CAAC,CAAC;IAE0C,CAAC;IAE9C,qCAAQ,GAAR,cAAY,CAAC;IAEb,0CAAa,GAAb;QACE,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;QACxD,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;QAC1D,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrC,QAAQ,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnD,IAAI,QAAQ,EAAE;YACZ,IAAI,OAAO,GAAG;gBACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,iBAAiB,EAAE,wCAAwC;oBAC3D,gBAAgB,EACd,oDAAoD;iBACvD,CAAC;aACH,CAAC;YACF,IAAI,CAAC,UAAU;iBACZ,GAAG,CACF,oEAAoE;gBAClE,QAAQ;gBACR,UAAU;gBACV,SAAS,EACX,OAAO,CACR;iBACA,SAAS,CAAC,UAAC,UAAsB;gBAChC,IAAI;oBACF,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;wBACvC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;qBACvD;iBACF;gBAAC,OAAO,EAAE,EAAE;oBACX,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBACnB;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;;AAED;IAAA;QACE,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,CAAC,CAAC;QACrB,YAAO,GAAyB,EAAE,CAAC;IACrC,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED;IAAA;QACE,aAAQ,GAAW,EAAE,CAAC;QACtB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,EAAE,CAAC;IACvB,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3ED;AAAA;AAAA;AAAA;AAO8B;;;AAE9B;IA0BE,qBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAtBlC,oBAAe,GAAG,UAAU,CAAC;QAC7B,gBAAW,GAAG;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,YAAY,EAAE,MAAM;gBACpB,iBAAiB,EAAE,8BAA8B;gBACjD,gBAAgB,EAAE,oDAAoD;aACvE,CAAC;SACH,CAAC;IAe2C,CAAC;IAb9C,+BAAS,GAAT,UACE,OAAyB,EACzB,IAAiB;QAEjB,4BAA4B;QAC5B,kBAAkB;QAClB,yDAAyD;QACzD,8EAA8E;QAC9E,OAAO;QACP,MAAM;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAIM,oCAAc,GAArB,UAAsB,GAAG;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3E,CAAC;;sBAzCH;CA0CC;AA5BuB;;;;;;;;;;;;;ACdxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<app-dashboard></app-dashboard>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'covid-stats';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { HttpService } from \"./services/http.service\";\n\n@NgModule({\n  declarations: [AppComponent, DashboardComponent],\n  imports: [BrowserModule, HttpClientModule, ReactiveFormsModule],\n  providers: [HttpService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<!-- <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <form [formGroup]=\"profileForm\" (ngSubmit)=\"downloadVideo()\">\n        <input\n          [required]=\"true\"\n          type=\"text\"\n          formControlName=\"videoUrl\"\n          class=\"form-control input-lg\"\n        />\n        <button type=\"submit\" class=\"btn btn-info\">Download</button>\n      </form>\n    </div>\n  </div>\n</div> -->\n\n<div class=\"s013\">\n  <form [formGroup]=\"profileForm\" (ngSubmit)=\"downloadVideo()\">\n    <fieldset>\n      <legend>YOU VIDEO DOWNLOADER</legend>\n      <label class=\"created-by\"\n        >Created by\n        <a href=\"https://github.com/karankarpe92\" target=\"_blank\"\n          >Karan Karpe</a\n        ></label\n      >\n    </fieldset>\n    <div class=\"inner-form\">\n      <div class=\"left\">\n        <div class=\"input-wrap first\">\n          <div class=\"input-field first\">\n            <label>Paste YouTube Video URL here</label>\n            <input\n              formControlName=\"videoUrl\"\n              type=\"text\"\n              placeholder=\"ex: https://www.youtube.com/watch?v=EXaEz0mJXWY\"\n            />\n          </div>\n        </div>\n        <div class=\"input-wrap second\">\n          <div class=\"input-field second\">\n            <label>Download Type</label>\n            <div class=\"input-select\">\n              <select\n                formControlName=\"videoType\"\n                data-trigger=\"\"\n                name=\"choices-single-defaul\"\n              >\n                <option selected [value]=\"'videos'\">VIDEO</option>\n                <option [value]=\"'mp3'\">MP3 ONLY</option>\n                <!-- <option [value]=\"'mp3-mp4'\">MP3 AND VIDEO</option> -->\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button class=\"btn-search\" type=\"submit\">DOWNLOAD</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit {\n  private totalCounts: {\n    confirmed: number;\n    recovered: number;\n    critical: number;\n    deaths: number;\n  } = {\n    confirmed: 0,\n    recovered: 0,\n    critical: 0,\n    deaths: 0,\n  };\n  profileForm = new FormGroup({\n    videoUrl: new FormControl(\"\"),\n    videoType: new FormControl(\"\"),\n  });\n\n  constructor(private httpClient: HttpClient) {}\n\n  ngOnInit() {}\n\n  downloadVideo() {\n    let videoUrl = this.profileForm.controls.videoUrl.value;\n    let videoType = this.profileForm.controls.videoType.value;\n    let splitUrl = videoUrl.split(\"?v=\");\n    videoUrl = splitUrl.length == 2 ? splitUrl[1] : \"\";\n    if (videoUrl) {\n      let headers = {\n        headers: new HttpHeaders({\n          \"x-rapidapi-host\": \"download-video-youtube1.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"7fba68f20bmsh644db43347c2ef4p1ff20fjsn511aabdd4605\",\n        }),\n      };\n      this.httpClient\n        .get(\n          \"https://download-video-youtube1.p.rapidapi.com/redir.php?video_id=\" +\n            videoUrl +\n            \"&format=\" +\n            videoType,\n          headers\n        )\n        .subscribe((videoModel: VideoModel) => {\n          try {\n            if (videoModel && videoModel.vidInfo[0]) {\n              window.location.href = videoModel.vidInfo[0].dloadUrl;\n            }\n          } catch (ex) {\n            console.error(ex);\n          }\n        });\n    }\n  }\n}\n\nexport class VideoModel {\n  vidID: string = \"\";\n  vidTitle: string = \"\";\n  vidThumb: string = \"\";\n  duration: number = 0;\n  vidInfo: VideoDownloadModel[] = [];\n}\n\nexport class VideoDownloadModel {\n  dloadUrl: string = \"\";\n  bitrate: number = 0;\n  mp3size: string = \"\";\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport {\n  HttpClient,\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpHeaders,\n} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService implements HttpInterceptor {\n  private REST_API_SERVER = \"https://\";\n  private httpOptions = {\n    headers: new HttpHeaders({\n      responseType: \"json\",\n      \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"7fba68f20bmsh644db43347c2ef4p1ff20fjsn511aabdd4605\",\n    }),\n  };\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // request = request.clone({\n    //   setHeaders: {\n    //     \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\",\n    //     \"x-rapidapi-key\": \"7fba68f20bmsh644db43347c2ef4p1ff20fjsn511aabdd4605\",\n    //   },\n    // });\n    return next.handle(request);\n  }\n\n  constructor(private httpClient: HttpClient) {}\n\n  public sendGetRequest(url) {\n    return this.httpClient.get(this.REST_API_SERVER + url, this.httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}